plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'io.github.tkuenneth'
            artifactId = 'compose_adaptive_scaffold'
            version = '0.0.1'
            afterEvaluate {
                from components.release
            }
            pom {
                name = 'compose_adaptive_scaffold'
                description = 'Make supporting large screens and foldables a breeze'
                url = 'https://github.com/tkuenneth/compose_adaptive_scaffold'
                licenses {
                    license {
                        name = 'MIT license'
                        url = 'https://opensource.org/license/mit/'
                    }
                }
                developers {
                    developer {
                        id = 'tkuenneth'
                        name = 'Thomas Kuenneth'
                        email = 'thomas@thomaskuenneth.eu'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/tkuenneth/compose_adaptive_scaffold.git'
                    developerConnection = 'scm:git:https://github.com/tkuenneth/compose_adaptive_scaffold.git'
                    url = 'https://github.com/tkuenneth/compose_adaptive_scaffold'
                }
            }
        }
    }
}

android {
    namespace 'eu.thomaskuenneth.adaptivescaffold'
    compileSdk 33
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
    defaultConfig {
        minSdk 28
        targetSdk 33
        aarMetadata {
            minCompileSdk = 33
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.1"
    }
}

dependencies {
    implementation 'androidx.window:window-core:1.1.0-beta02'
    implementation "androidx.window:window:1.1.0-beta02"

    def composeBom = platform('androidx.compose:compose-bom:2023.03.00')
    implementation composeBom
    androidTestImplementation composeBom
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.0'
}
